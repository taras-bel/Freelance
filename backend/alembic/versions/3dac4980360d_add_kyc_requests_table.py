"""add kyc_requests table

Revision ID: 3dac4980360d
Revises: 9406d389dbd3
Create Date: 2025-07-08 17:27:44.977110

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3dac4980360d'
down_revision: Union[str, Sequence[str], None] = '9406d389dbd3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('kyc_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='kycstatus'), nullable=True),
    sa.Column('document_type', sa.String(length=100), nullable=False),
    sa.Column('document_url', sa.String(length=500), nullable=False),
    sa.Column('comment', sa.String(length=500), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kyc_requests_id'), 'kyc_requests', ['id'], unique=False)
    op.create_table('chat_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_url', sa.String(length=500), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('is_safe', sa.Boolean(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_files_id'), 'chat_files', ['id'], unique=False)
    op.add_column('escrows', sa.Column('platform_fee', sa.DECIMAL(precision=10, scale=2), nullable=True))
    op.add_column('escrows', sa.Column('freelancer_amount', sa.DECIMAL(precision=10, scale=2), nullable=True))
    op.add_column('escrows', sa.Column('client_id', sa.Integer(), nullable=False))
    op.add_column('escrows', sa.Column('freelancer_id', sa.Integer(), nullable=False))
    op.add_column('escrows', sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('escrows', sa.Column('dispute_reason', sa.Text(), nullable=True))
    op.add_column('escrows', sa.Column('disputed_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('escrows', sa.Column('disputed_by', sa.Integer(), nullable=True))
    op.add_column('escrows', sa.Column('resolution', sa.String(length=50), nullable=True))
    op.add_column('escrows', sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('escrows', sa.Column('resolved_by', sa.Integer(), nullable=True))
    op.alter_column('escrows', 'status',
               existing_type=sa.VARCHAR(length=8),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.drop_constraint(None, 'escrows', type_='foreignkey')
    op.drop_constraint(None, 'escrows', type_='foreignkey')
    op.create_foreign_key(None, 'escrows', 'users', ['freelancer_id'], ['id'])
    op.create_foreign_key(None, 'escrows', 'users', ['client_id'], ['id'])
    op.create_foreign_key(None, 'escrows', 'users', ['resolved_by'], ['id'])
    op.create_foreign_key(None, 'escrows', 'users', ['disputed_by'], ['id'])
    op.drop_column('escrows', 'buyer_id')
    op.drop_column('escrows', 'description')
    op.drop_column('escrows', 'seller_id')
    op.add_column('payments', sa.Column('payment_type', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_admin')
    op.drop_column('payments', 'payment_type')
    op.add_column('escrows', sa.Column('seller_id', sa.INTEGER(), nullable=False))
    op.add_column('escrows', sa.Column('description', sa.VARCHAR(length=500), nullable=True))
    op.add_column('escrows', sa.Column('buyer_id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'escrows', type_='foreignkey')
    op.drop_constraint(None, 'escrows', type_='foreignkey')
    op.drop_constraint(None, 'escrows', type_='foreignkey')
    op.drop_constraint(None, 'escrows', type_='foreignkey')
    op.create_foreign_key(None, 'escrows', 'users', ['buyer_id'], ['id'])
    op.create_foreign_key(None, 'escrows', 'users', ['seller_id'], ['id'])
    op.alter_column('escrows', 'status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=8),
               existing_nullable=True)
    op.drop_column('escrows', 'resolved_by')
    op.drop_column('escrows', 'resolved_at')
    op.drop_column('escrows', 'resolution')
    op.drop_column('escrows', 'disputed_by')
    op.drop_column('escrows', 'disputed_at')
    op.drop_column('escrows', 'dispute_reason')
    op.drop_column('escrows', 'expires_at')
    op.drop_column('escrows', 'freelancer_id')
    op.drop_column('escrows', 'client_id')
    op.drop_column('escrows', 'freelancer_amount')
    op.drop_column('escrows', 'platform_fee')
    op.drop_index(op.f('ix_chat_files_id'), table_name='chat_files')
    op.drop_table('chat_files')
    op.drop_index(op.f('ix_kyc_requests_id'), table_name='kyc_requests')
    op.drop_table('kyc_requests')
    # ### end Alembic commands ###
